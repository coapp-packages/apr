/* target information */
@import "version.inc";

#product-info  {
	product-name: "apr";
	version: "trunk";
	original-source-location: "https://github.com/apache/apr";
	original-source-website: "http://apr.apache.org/";
	license: "Apache License";
	packager: "Hamish C";
}

test {
	set: {
		PLAT="${PLAT??x86, x64}";
		BUILT="${BUILT??false}";
	};
    default : false;
    build-command: @"
		for %%A in (${PLAT}) do (
            echo %CL% | findstr ISOLATION_AWARE || set CL=%CL% /D ISOLATION_AWARE_ENABLED 
            if ""${BUILT}"" neq ""true"" ptk --nologo release --PLAT=%%A
		)
        REM Tests not presently implemented due to technical difficulties...
    ";
};

package {
    set: COMP="${COMP??vc10}";
    set: PLAT="${PLAT??x86, x64}";
    default : false;
    uses : sign;
    
    targets: { 
        @"copkg\apr[vc10]-${package-version}-x86.msi",
        @"copkg\apr-dev[vc10]-${package-version}-x86.msi",
        @"copkg\apr-dev-common-${package-version}-any.msi",
        @"copkg\apr[vc10]-${package-version}-x64.msi",
        @"copkg\apr-dev[vc10]-${package-version}-x64.msi"
    };
    
    build-command : @"
        pushd COPKG
        autopackage apr-dev-common.autopkg || goto failed
        for %%a in (${COMP}) do
            for %%b in (${PLAT}) do
                autopackage --comp=%%a --plat=%%b apr.autopkg apr-dev.autopkg || goto failed
            )
        )
        popd
        ptk update-version
    ";

	clean-command: @"del COPKG\*.msi COPKG\*.wixpdb";
	
};


update-version {
    default : false;
    
    build-command : @"
        REM auto-increment version.inc file...
        
        pushd COPKG
        setlocal EnableDelayedExpansion
        for /F ""tokens=4,5,6,7  delims=.; "" %%v in (version.inc) do (
            set /a build=%%y + 1
            set VERSTRING=#define { package-version: %%v.%%w.%%x.!build!; }
        )
        echo !VERSTRING! > version.inc
        popd
    ";
}

release {
    set: {
		BuildCfg="Release";
		PLAT="${PLAT??x86, x64}";
	};
	
	build-command: @"
		for %%A in (${PLAT}) do (
			ptk --nologo base --PLAT=%%A --BuildCfg=${BuildCfg} || goto failed
		)
	";
    
};

sign {
    set: COMP="${COMP??vc10}";
    default : false;
    uses: release;
    build-command: @"simplesigner.exe --nologo --sign output\${COMP}\x64\Release**.dll output\${COMP}\x86\Release\**.dll";
};

x86 {
    set: PLAT=x86;
    uses: base;
};

x64 {
    set: PLAT=x64;
    uses: base;
};

base {
    set: PLAT="${PLAT??x86}";
    set: COMP="${COMP??vc10}";
    compiler: "${COMP}";
    platform: "${PLAT}";

    requires: "expat-dev[${COMP}]-2.0-${PLAT}-1e373a58e25250cb";
    requires: "openssl-dev[${COMP}]-1.0-${PLAT}-1e373a58e25250cb";

    targets: { 
		"output\${COMP}\${PLAT}\LibR\apr-2.lib",
		"output\${COMP}\${PLAT}\Release\libapr-2.lib",
		"output\${COMP}\${PLAT}\Release\libapr-2.dll",
		"output\${COMP}\${PLAT}\Release\libapr-2.exp",
	};
	
    build-command:@"
        REM this makes it so that DLLs can have their own SxS Activation Context in an embedded resource.
		echo %_CL% | findstr ISOLATION_AWARE || set _CL=%CL% /D ISOLATION_AWARE_ENABLED

        if ""${PLAT}"" == ""x86"" (
            msbuild /p:Platform=win32 /p:Configuration=${BuildCfg??Debug} apr.sln || goto failed
        ) else (
            msbuild /p:Platform=${PLAT} /p:Configuration=${BuildCfg??Debug} apr.sln || goto failed
        )
    ";
    clean-command:@"
       if exist ipch rmdir /s /q ipch > nul 2> nul
       if exist output rmdir /s /q output > nul 2> nul
       del /S /Q /A - *.sdf *.suo *.user *.exe *.pdb > nul 2>NUL
       del /S /Q include\apr.h include\apr_ldap.h include\apu_want.h include\private\apu_select_dbm.h > nul 2>NUL
    ";
};
